name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (build only, no publish)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        run: |
          python -m build
          
      - name: Check distribution
        run: |
          python -m twine check dist/*
          
      - name: Show package info
        run: |
          ls -la dist/
          python -m pip show setuptools wheel build
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7

  publish:
    name: Publish to PyPI ðŸš€
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && !inputs.dry_run)
    needs: [build]
    runs-on: ubuntu-latest
    
    environment:
      name: pypi
      url: https://pypi.org/project/netbox-maintenance-device/
      
    permissions:
      id-token: write  # For trusted publishing (fallback)
      
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Inspect wheel METADATA (debug)
        run: |
          echo "Listing dist/ contents";
          ls -l dist;
          python -c "import zipfile, sys, json, pathlib; import os;\nwheel=[p for p in pathlib.Path('dist').glob('*.whl')][0];\nprint('Analyzing', wheel);\nwith zipfile.ZipFile(wheel) as z: \n    meta=[n for n in z.namelist() if n.endswith('METADATA')][0];\n    data=z.read(meta).decode();\n    print('--- METADATA START ---');\n    print('\n'.join(data.splitlines()[:40]));\n    print('--- (truncated) ---');\n    assert 'Name: netbox-maintenance-device' in data, 'Name field missing in METADATA';\n    assert 'Version: ' in data, 'Version field missing in METADATA';\n    print('Name/Version present OK');"
      - name: Show pyproject used (debug)
        run: |
          sed -n '1,120p' pyproject.toml
          
      - name: Publish to PyPI (with token)
        uses: pypa/gh-action-pypi-publish@v1.10.3
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          
      - name: Create GitHub Release Summary
        if: success()
        run: |
          echo "ðŸŽ‰ **Publication successful!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ **Package:** netbox-maintenance-device" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— **PyPI:** https://pypi.org/project/netbox-maintenance-device/" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¥ **Install:** \`pip install netbox-maintenance-device\`" >> $GITHUB_STEP_SUMMARY